% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/itnb-optimise.R
\name{itnb_control}
\alias{itnb_control}
\title{Control function for the \link{itnb} function.}
\usage{
itnb_control(
  method = "em",
  trace = 0,
  tolerance = 1e-06,
  lambda = c(0.1, 0.001),
  iteration_min = 5,
  iteration_max = 10000,
  steps = 100,
  exact = FALSE,
  save_data = TRUE,
  save_trace = TRUE
)
}
\arguments{
\item{method}{String: indicating the method used to optimise the parameters (currently only accepts \code{method = 'em'}).}

\item{trace}{Numeric (>= 0): showing a trace every \code{trace} number of iterations.}

\item{tolerance}{Numeric (> 0): Convergence tolerance.}

\item{lambda}{Numeric (> 0): Vector of penalisation constants (see details).}

\item{iteration_min}{Numeric (>= 0): The minimum number of allowed iterations.}

\item{iteration_max}{Numeric (>= \code{iteration_min}): The maximum number of allowed iterations.}

\item{steps}{Numeric (>= 0): The number of steps to use when approximating the integral needed for the derivative of the overdispersion.}

\item{exact}{TRUE/FALSE: should parameter optimisation use the exact gradient, or finite difference?}

\item{save_data}{TRUE/FALSE: should the data be stored in the return object?}

\item{save_trace}{TRUE/FALSE: should the entire trace be stored in the return object?}
}
\value{
A list of default arguments for the \link{itnb} function.
}
\description{
Creates a list of default options.
}
\details{
The vector of penalisation constants, \code{lambda}, can be set using one or two elements. If a single element is provided, the penalisation
constant is fixed in every iteration of the EM-algorithm; however, if two elements are provided, the first is used as the initial penalisation constant, while
the second is used to scale the penalisation in every iteration, creating a sequence of penalisation constants.
NB: if the data does not contain an inflation point, or if the inflation point is smaller than the truncation point, then lambda should be set to zero.
}
